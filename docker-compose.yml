version: '3.2'
services:

  # Hint: docker-compose up -d web
  web:
    image: nginx:latest
    container_name: nginx
    ports:
      - 80:80
    volumes:
      - .:/app
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
#      - db # Uncomment to use mysql
#      - redis # Uncomment to use redis

  # Hint: docker-compose run php
  php:
    build: .
    container_name: php
    volumes:
      - .:/app
      - ./docker/php:/usr/local/etc/php
    env_file:
      - .env
#    links: # Uncomment to use redis as session handler. see also docker/php/conf.d/redis-session.ini
#      - redis-session

  redis:
    image: redis:5.0.3
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - ./db/redis:/data:rw

#  redis-session: # Uncomment to use redis as session handler. see also docker/php/conf.d/redis-session.ini
#    image: redis:5.0.3
#    container_name: redis-session
#    command: ["redis-server", "--save", "/data", "--appendonly", "yes"]
#    hostname: redis-session
#    ports:
#      - 6380:6379
#    volumes:
#      - ./docker/data/redis-session:/data:rw

#  db: # Uncomment to use mysql
#    image: mysql:8.0
#    command: ["--default-authentication-plugin=mysql_native_password", "--skip-symbolic-links" ,"--innodb-use-native-aio=0"]
#    container_name: db
#    restart: always
#    ports:
#      - 3306:3306
#    volumes:
#      - ./db/mysql:/var/lib/mysql:rw
#    environment:
#      - MYSQL_ROOT_PASSWORD=root
#      - MYSQL_ROOT_HOST=%
#      - TZ=America/Toronto

  # Hint: docker-compose up -d adminer
  adminer:
    image: adminer
    links:
      - db
    ports:
      - 8080:8080

  # Hint: docker-compose run shell
  shell:
    build:
      context: ./
      dockerfile: DockerfileShell
    tty: true
    entrypoint: ["/bin/bash"]
    working_dir: "/app"
    volumes:
      - .:/app

  # Hint: docker-compose run tests
  tests:
    build: .
    volumes:
      - .:/app
    env_file:
      - .env
    tty: true
    working_dir: "/app"
    entrypoint: ["vendor/bin/phpunit"]

  # Hint: docker-compose run migration
#  migration:
#    build:
#      context: ./
#      dockerfile: DockerfileShell
#    env_file:
#      - .env
#    tty: true
#    entrypoint: ["vendor/bin/phinx"]
#    working_dir: "/app"
#    volumes:
#      - .:/app